version: "3.8"

services:
  # Main FastAPI Application (Production)
  sensai-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - S3_BUCKET_NAME=${S3_BUCKET_NAME}
        - S3_FOLDER_NAME=${S3_FOLDER_NAME}
        - ENV=production
        - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
        - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
        - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
        - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
        - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
        - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    container_name: sensai-api-prod
    working_dir: /src
    command: >
      bash -c "
        python /src/startup.py &&
        uvicorn api.main:app --host 0.0.0.0 --port 8001 --workers 4
      "
    expose:
      - "8001"
    volumes:
      - sensai_data_prod:/appdata
      - sensai_logs_prod:/appdata/logs
    environment:
      - PYTHONPATH=/src
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_FOLDER_NAME=${S3_FOLDER_NAME}
      - ENV=production
      - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
      - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
      - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
      - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
      - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - sensai-network-prod
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2.0"
        reservations:
          memory: 1G
          cpus: "1.0"

  # Public API Service (Production)
  sensai-public-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - S3_BUCKET_NAME=${S3_BUCKET_NAME}
        - S3_FOLDER_NAME=${S3_FOLDER_NAME}
        - ENV=production
        - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
        - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
        - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
        - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
        - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
        - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    container_name: sensai-public-api-prod
    working_dir: /src
    command: >
      bash -c "
        python /src/startup.py &&
        uvicorn api.public:app --host 0.0.0.0 --port 8001 --workers 2
      "
    expose:
      - "8001"
    volumes:
      - sensai_data_prod:/appdata
      - sensai_logs_prod:/appdata/logs
    environment:
      - PYTHONPATH=/src
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_FOLDER_NAME=${S3_FOLDER_NAME}
      - ENV=production
      - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
      - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
      - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
      - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
      - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - sensai-network-prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: sensai-redis-prod
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sensai-network-prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: sensai-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - sensai-api
      - sensai-public-api
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sensai-network-prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.25"

volumes:
  sensai_data_prod:
    driver: local
  sensai_logs_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_logs:
    driver: local

networks:
  sensai-network-prod:
    driver: bridge
