version: "3.8"

services:
  # Main FastAPI Application
  sensai-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY:-}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
        - S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
        - S3_FOLDER_NAME=${S3_FOLDER_NAME:-}
        - ENV=${ENV:-development}
        - BUGSNAG_API_KEY=${BUGSNAG_API_KEY:-}
        - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL:-}
        - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL:-}
        - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL:-}
        - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT:-}
        - PHOENIX_API_KEY=${PHOENIX_API_KEY:-}
    container_name: sensai-api
    working_dir: /src
    command: >
      bash -c "
        python /src/startup.py &&
        uvicorn api.main:app --host 0.0.0.0 --port 8001 --reload
      "
    ports:
      - "8000:8001"
    volumes:
      - ./src:/src
      - sensai_data:/appdata
      - sensai_logs:/appdata/logs
    environment:
      - PYTHONPATH=/src
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_FOLDER_NAME=${S3_FOLDER_NAME}
      - ENV=${ENV:-development}
      - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
      - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
      - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
      - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
      - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - sensai-network

  # Public API Service (if needed)
  sensai-public-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY:-}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
        - S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
        - S3_FOLDER_NAME=${S3_FOLDER_NAME:-}
        - ENV=${ENV:-development}
        - BUGSNAG_API_KEY=${BUGSNAG_API_KEY:-}
        - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL:-}
        - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL:-}
        - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL:-}
        - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT:-}
        - PHOENIX_API_KEY=${PHOENIX_API_KEY:-}
    container_name: sensai-public-api
    working_dir: /src
    command: >
      bash -c "
        python /src/startup.py &&
        uvicorn api.public:app --host 0.0.0.0 --port 8001 --reload
      "
    ports:
      - "8002:8001"
    volumes:
      - ./src:/src
      - sensai_data:/appdata
      - sensai_logs:/appdata/logs
    environment:
      - PYTHONPATH=/src
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_FOLDER_NAME=${S3_FOLDER_NAME}
      - ENV=${ENV:-development}
      - BUGSNAG_API_KEY=${BUGSNAG_API_KEY}
      - SLACK_USER_SIGNUP_WEBHOOK_URL=${SLACK_USER_SIGNUP_WEBHOOK_URL}
      - SLACK_COURSE_CREATED_WEBHOOK_URL=${SLACK_COURSE_CREATED_WEBHOOK_URL}
      - SLACK_USAGE_STATS_WEBHOOK_URL=${SLACK_USAGE_STATS_WEBHOOK_URL}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
      - PHOENIX_API_KEY=${PHOENIX_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - sensai-network

  # Redis for caching and session management (optional)
  redis:
    image: redis:7-alpine
    container_name: sensai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sensai-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: sensai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - sensai-api
      - sensai-public-api
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sensai-network
    profiles:
      - production

volumes:
  sensai_data:
    driver: local
  sensai_logs:
    driver: local
  redis_data:
    driver: local

networks:
  sensai-network:
    driver: bridge
